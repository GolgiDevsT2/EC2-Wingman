/* IS_AUTOGENERATED_SO_ALLOW_AUTODELETE=YES */
/* The previous line is to allow auto deletion */

package io.golgi.wingman.gen;

import java.util.Hashtable;
import java.util.ArrayList;
import java.util.Iterator;
import com.openmindnetworks.golgi.JavaType;
import com.openmindnetworks.golgi.GolgiPayload;
import com.openmindnetworks.golgi.B64;
import com.openmindnetworks.golgi.api.GolgiException;
import com.openmindnetworks.golgi.api.GolgiAPI;
import android.os.Parcel;
import android.os.Parcelable;

public class InstanceList implements Parcelable
{

    public int describeContents(){
        return 0;
    }

    public void writeToParcel(Parcel dest, int flags){
        dest.writeString(this.serialise().toString());
    }

    public static final Parcelable.Creator<InstanceList> CREATOR = new Parcelable.Creator<InstanceList>() {
        public InstanceList createFromParcel(Parcel in) {
            return new InstanceList(in);
        }
        public InstanceList[] newArray(int size) {
            return new InstanceList[size];
        }
    };
    private InstanceList(Parcel in) {
        this(in.readString());
    }

    private boolean corrupt = false;

    public boolean isCorrupt() {
        return corrupt;
    }

    public void setCorrupt() {
        corrupt = true;
    }

    private boolean iListIsSet = false;
    private ArrayList<InstanceData> iList;

    public ArrayList<InstanceData> getIList(){
        return iList;
    }
    public boolean iListIsSet(){
        return iListIsSet;
    }
    public void setIList(ArrayList<InstanceData> iList){
        this.iList = iList;
        this.iListIsSet = true;
    }

    public StringBuffer serialise(){
        return serialise(null);
    }

    public StringBuffer serialise(StringBuffer sb){
        return serialise("", sb);
    }

    public StringBuffer serialise(String prefix, StringBuffer sb){
        if(sb == null){
            sb = new StringBuffer();
        }

        if(this.iListIsSet){
           int idx = 0;
           for(Iterator<InstanceData> it = iList.iterator(); it.hasNext();idx++){
               it.next().serialise(prefix + "1.[" + idx + "].", sb);
            }
        }

        return sb;
    }

    public void deserialise(String str){
        deserialise(JavaType.createPayload(str));
    }

    private void deserialise(GolgiPayload payload){
        if(!isCorrupt() && payload.containsNestedKey("1")){
            GolgiPayload listPayload = payload.getNested("1");
            GolgiPayload itemPayload;
            ArrayList<InstanceData> al = new ArrayList<InstanceData>();
            for(int idx = 0; (itemPayload = listPayload.getNested("[" + idx + "]")) != null; idx++){
                InstanceData inst = new InstanceData(itemPayload);
                if(inst != null){
                    al.add(inst);
                }
            }
            setIList(al);
        }
    }

    public InstanceList(){
        this(true);
    }

    public InstanceList(boolean isSetDefault){
        super();
        iListIsSet = isSetDefault;
        iList = new ArrayList<InstanceData>();
    }

    public InstanceList(GolgiPayload payload){
        this(false);
        deserialise(payload);
    }

    public InstanceList(String payload){
        this(JavaType.createPayload(payload));
    }

}
